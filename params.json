{"name":"Logicboard","tagline":"This is a java console implementation of the LogicBoard project. It's purpose is for proof of concept. Once completed it will be implemented as an application using GUI. This project focuses on the data structure to handle creation,edits, and saves of a logicBoard project.All source code has been designed and implemented by Kyle Ferguson (Brogrammer Studios). This is kind of a private project","body":"\r\n###Update 1\r\n    As of now a clean up and error catching process is being done on the data structure.\r\n    Once done Logic blocking, object saving and cloning will be implemented. This will allow \r\n    for saving of LogicBoards (blocks) and when deserialized multiple copies can be made so you can\r\n    have mulitple logic blocks with the same logic from the saved version althroughout any other logic board.\r\n\r\n###Update 2\r\n    Alright as of now new exceptions have been created for certain error occurances in the data structure. \r\n    Clean up is as always underway. Also Designs for new functions are being made.(hint hint circuit \r\n    simplification tools :D). However as testing continues I have started designing some much needed\r\n    functions to make building boards more intuitive based on some not so intuitive processes I \r\n    designed earlier. Logicboards can be saved and cloned. LogicBoards implemented into other logicboards\r\n    now act as a gate object as they now implement the Gate interface. Logicboards also allow you to rename \r\n    it's system output gates gateID. This allows for more intuitive debugging for whatever user is creating! \r\n    Might add some addition features for that. This is probably the biggest update... mainly cause I have \r\n    been lazy and haven't been logging the commits made since update 1. In any case, feel free to look at \r\n    the code friends. Please notify me before using code, alot of time has been spent on this...also becuase\r\n    it's far from done.\r\n    \r\n###Update 3\r\n    Hey what's up guys!? Back for another update to the source code. Alright so first off I totally did an \r\n    overhaul to the folder structure of the project. This makes it emensely better as the structure of the \r\n    program is more clear and easier to understand. Next up is the beginning of the implementation of a\r\n    sort-of sub project. I started designing and implementing some code that should be able to parse a \r\n    boolean expression, build a binary tree from it, and finally, based on the structure of the tree,\r\n    build a logic board from the expression. This class that does this can take as many expressions and\r\n    build logic based on it with the same board. The drawback is that the boolean expression can only\r\n    contain values of the BOARDS INITIAL INPUTS. Each boolean expression only yeilds one ouput. Say you\r\n    have a board with inputs of A, B, C, and D. We want it to output (A'+B*C) and have another \r\n    output: (D*C*A). Well the answer is staring us in the face! We would simply add those two expressions\r\n    to a BoardTree objects list of expressions! The reason this works is becuase a gate can theoretically\r\n    ouput TO an infinite number of inputs. The next thing I am going to work on is testing, debugging, and \r\n    of course fixing this new implementation. The next thing I want to work on is a SMART parser that can\r\n    correct small/simple errors in the expression passed before parsing.\r\n    (adding spaces, checking parentheses, etc.) Well thats it for this update message, thanks for reading and\r\n    following!","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}